//
// 4.	 Создайте	скрипт,	который	реализует	появление	префаба	в  случайном месте сцены. Радиус появления 20 юнитов.
// Скрипт вешается на пустой объект, в prefab добавляется префаб
public GameObject prefab;

void Update()
{
  if (Input.GetKeyDown(KeyCode.Space))
  {
    Vector3 spawnPosition = new Vector3(Random.Range(Random.Range(-10, 11), Random.Range(-10, 11), Random.Range(-10, 11));
    Instantiate(prefab, spawnPosition, Quaternion.identity);
  }
}

//
// 5.	 Создайте скрипт, который реализует удаление объекта на сцене по нажатию на него левой клавиши мыши.
// Скрипт вешается на объект
private void OnMouseDown()
{
  Destroy(GameObject);
}

//
// 6.	Создайте скрипт, который реализует перемещение объекта по 2- ум осям со скоростью 5.
//
private float speed = 5f;

void Update()
{
  transform.position += new Vector3(speed, 0, speed) * Time.deltaTime;
}

//
// 7.	Создайте скрипт, который реализует уменьшение размера объекта до 0%. При достижении 0% объект нужно удалить.
//
void Update()
{
  transform.localScale -= new Vector3(Time.deltaTime, Time.deltaTime, Time.deltaTime);
  if (transform.localScale <= Vector3(0f, 0f, 0f))
  {
    Destroy(GameObject);
  }
}

//
// 8.	Реализуйте взаимодействие между двумя объектами при  помощи коллизии.
//
private void OnCollisionEnter(Collision collision)
{
  collision.transform.position += new Vector3(0, 5, 0);
}

//
// 9.	Реализуйте передвижение объекта векторным способом
//
void Update()
{
  transform.position += new Vector3(Input.GetAxis("Horizontal"), Input.GetAxis("Vertical"), 0) * Time.deltaTime;
}

//
// 10.	Реализуйте передвижение объекта через компонент Rigidbody
//
public Rigidbody rb;
private Vector3 direction = new Vector3(5, 5, 5);

void Start()
{
  transform.position = new Vector3(0, 0, 0);
}
void Update()
{
  rb.AddForce(direction);
}

//
// 11.	Реализуйте с помощью скрипта перемещение камеры за игроком
//
private Vector3 offset;
public Transform target;
private float smoothTime = 0.25f;
private Vector3 currentVelocity = Vector3.zero;

void Awake()
{
  offset = transform.position - target.position;
}

void LateUpdate()
{
  Vector3 targetPosition = target.position + offset;
  transform.position = Vector3.SmoothDamp(transform.position, targetPosition, ref currnetVelocity, smoothTime);
}

//
// ИЛИ
//
public float followSpeed = 2f;
public Transform target;

void Update()
{
  Vector3 newPosition = new Vector3(target.position.x, target.position.y + 10f, target.position - 10f);
  transfrom.position = Vector3.Slerp(transform.position, newPosition, followSpeed * time);
}

//
// 12.	Реализуйте	с	помощью	скрипта	перемещение	камеры	по  определенной траектории
//
private float x = 0f;

void Update()
{
  transofrm.position += new Vector3(x, x * x, 0);
  x += 0.1f;
}

//
// 13.	Реализуйте скрипт для прыжка объекта по нажатию клавиши
//
public RigidBody rb;

void Update()
{
  Input.GetKeyDown(KeyCode.Space)
  {
    rb.velocity = new Vector3(rb.velocity.x, 5f, rb.velocity.z);
  }
}

//
// 14.	Напишите скрипт по переключению между слоями
//
void Update()
{
  if (Input.GetKeyDown(KeyCode.Space))
  {
    gameObject.layer = 2; // любой номер слоя
  }
}

//
// 15.	Реализуйте скрипт для ускоренного бега и приседания, если над FPS объект - не выходить из состояния приседания
//



















































//
// 16.	Напишите скрипт генерации префабов на сцене
//
public gameObject prefab;
private float xPosition = 0f;
private float zPosition = 0f;

void Update()
{
    Vector3 spawnPosition = new Vector3(xPosition, 0, zPosition);
    Instantiate(prefab, spawnPosition, Quaternion.identity);
    xPosition += 1f;
    zPosition += 2f;
}

//
// 17.	Напишите скрипт дающий скорость передвижения объекту
//
public float speed = 5f;

void Update()
{
  transform.position += new Vector3(speed, speed * 0.5, speed) * Time.deltaTime;
}

//
// 18.	Напишите скрипт дающий очки жизни объекту
//
private float health = 100f;

voidUpdate()
{
  if (Input.GetKeyDown(KeyCode.H))
  {
    health -= 20f;
  }

  if (health <= 0)
  {
    Destroy(gameObject);
  }
}

//
// 19.	Динамическое изменение параметров объекта. Создайте объект с
// изменяемыми параметрами (например, скорость, размер, цвет), а после реализуйте скрипт, который динамически
// изменяет эти параметры в зависимости от действий игрока или состояния игры.
//
void Update()
{
  if (Input.GetKeyDown(KeyCode.R))
  {
    gameObject.GetComponent<Renderer>().material.color = new Color(255, 0, 0);
  }
  if (Input.GetKeyDown(KeyCode.G))
  {
    gameObject.GetComponent<Renderer>().material.color = new Color(0, 255, 0);
  }
  if (Input.GetKeyDown(KeyCode.B))
  {
    gameObject.GetComponent<Renderer>().material.color = new Color(0, 0, 255);
  }
  if (Input.GetKeyDown(KeyCode.Space))
  {
    gameObject.transform.localScale += new Vector3(1.5f, 1.5f, 1.5f);
  }
  if (Input.GetKeyDown(KeyCode.LeftShift))
  {
    gameObject.transform.localScale -= new Vector3(1.5f, 1.5f, 1.5f);
  }
}

//
// 
// 
